/* Generated By:JavaCC: Do not edit this line. GUIparserConstants.java */
package cysystem.diwGUI.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GUIparserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 9;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 10;
  /** RegularExpression Id. */
  int CYDBPREFIX = 12;
  /** RegularExpression Id. */
  int SQL = 13;
  /** RegularExpression Id. */
  int START_SHOWTEXT = 14;
  /** RegularExpression Id. */
  int END_SHOWTEXT = 15;
  /** RegularExpression Id. */
  int XSDFILE = 16;
  /** RegularExpression Id. */
  int FILENAME = 17;
  /** RegularExpression Id. */
  int HOLD = 18;
  /** RegularExpression Id. */
  int RUN = 19;
  /** RegularExpression Id. */
  int EXECUTE = 20;
  /** RegularExpression Id. */
  int CURRENT = 21;
  /** RegularExpression Id. */
  int DISPLAY = 22;
  /** RegularExpression Id. */
  int DISPLAYXML = 23;
  /** RegularExpression Id. */
  int DISPLAYTXT = 24;
  /** RegularExpression Id. */
  int DISPLAYPDF = 25;
  /** RegularExpression Id. */
  int CLICK = 26;
  /** RegularExpression Id. */
  int PRESS = 27;
  /** RegularExpression Id. */
  int CLOSE = 28;
  /** RegularExpression Id. */
  int PAUSE = 29;
  /** RegularExpression Id. */
  int OPERATIONSLOG = 30;
  /** RegularExpression Id. */
  int LIST = 31;
  /** RegularExpression Id. */
  int CLEAR = 32;
  /** RegularExpression Id. */
  int CLUSTERS = 33;
  /** RegularExpression Id. */
  int COMMANDS = 34;
  /** RegularExpression Id. */
  int VARIABLES = 35;
  /** RegularExpression Id. */
  int VARIABLE = 36;
  /** RegularExpression Id. */
  int LOGS = 37;
  /** RegularExpression Id. */
  int CREATEXML = 38;
  /** RegularExpression Id. */
  int DISPLAYFILE = 39;
  /** RegularExpression Id. */
  int CONVERTSWF = 40;
  /** RegularExpression Id. */
  int PLOTSWF = 41;
  /** RegularExpression Id. */
  int SNAPSHOT = 42;
  /** RegularExpression Id. */
  int CREATEFILE = 43;
  /** RegularExpression Id. */
  int COPYFILE = 44;
  /** RegularExpression Id. */
  int GENERATEINDEX = 45;
  /** RegularExpression Id. */
  int PRINTINDEXELEMENTS = 46;
  /** RegularExpression Id. */
  int COUNTINDEXELEMENTS = 47;
  /** RegularExpression Id. */
  int PRINTBYEXACTMATCH = 48;
  /** RegularExpression Id. */
  int DELETEFILE = 49;
  /** RegularExpression Id. */
  int SHOWDIRECTORY = 50;
  /** RegularExpression Id. */
  int STORAGECOUNTERCOMMANDS = 51;
  /** RegularExpression Id. */
  int getPageAllocatedCount = 52;
  /** RegularExpression Id. */
  int getPageDeallocatedCount = 53;
  /** RegularExpression Id. */
  int getPageRequestCount = 54;
  /** RegularExpression Id. */
  int getPageAccessCount = 55;
  /** RegularExpression Id. */
  int getPageAccessRelativeCount = 56;
  /** RegularExpression Id. */
  int resetPageAccessRelativeCount = 57;
  /** RegularExpression Id. */
  int CREATESTORAGE = 58;
  /** RegularExpression Id. */
  int CREATERAWSTORAGE = 59;
  /** RegularExpression Id. */
  int LOADSTORAGE = 60;
  /** RegularExpression Id. */
  int USESTORAGE = 61;
  /** RegularExpression Id. */
  int FORMATSTORAGE = 62;
  /** RegularExpression Id. */
  int REFORMATSTORAGE = 63;
  /** RegularExpression Id. */
  int STARTBUFFERMANAGER = 64;
  /** RegularExpression Id. */
  int DEMOFORSTORAGE = 65;
  /** RegularExpression Id. */
  int WRITEBITMAP = 66;
  /** RegularExpression Id. */
  int HELP = 67;
  /** RegularExpression Id. */
  int STEP = 68;
  /** RegularExpression Id. */
  int SET = 69;
  /** RegularExpression Id. */
  int DECLARE = 70;
  /** RegularExpression Id. */
  int UNDECLARE = 71;
  /** RegularExpression Id. */
  int TYPE = 72;
  /** RegularExpression Id. */
  int LOAD = 73;
  /** RegularExpression Id. */
  int LOGDIRECT = 74;
  /** RegularExpression Id. */
  int LOGTYPE = 75;
  /** RegularExpression Id. */
  int OUTDIRECT = 76;
  /** RegularExpression Id. */
  int IF = 77;
  /** RegularExpression Id. */
  int ELSE = 78;
  /** RegularExpression Id. */
  int OR = 79;
  /** RegularExpression Id. */
  int AND = 80;
  /** RegularExpression Id. */
  int FOREACH = 81;
  /** RegularExpression Id. */
  int IN = 82;
  /** RegularExpression Id. */
  int WHILE = 83;
  /** RegularExpression Id. */
  int BLOCKSTRING = 84;
  /** RegularExpression Id. */
  int COLON = 85;
  /** RegularExpression Id. */
  int COLONARROW = 86;
  /** RegularExpression Id. */
  int SEMICOLON = 87;
  /** RegularExpression Id. */
  int LPAREN = 88;
  /** RegularExpression Id. */
  int RPAREN = 89;
  /** RegularExpression Id. */
  int LBRACKET = 90;
  /** RegularExpression Id. */
  int RBRACKET = 91;
  /** RegularExpression Id. */
  int GT = 92;
  /** RegularExpression Id. */
  int PLUS = 93;
  /** RegularExpression Id. */
  int MINUS = 94;
  /** RegularExpression Id. */
  int STAR = 95;
  /** RegularExpression Id. */
  int SLASH = 96;
  /** RegularExpression Id. */
  int ID = 97;
  /** RegularExpression Id. */
  int PREFIXID = 98;
  /** RegularExpression Id. */
  int NUM = 99;
  /** RegularExpression Id. */
  int CLUSTERNAME = 100;
  /** RegularExpression Id. */
  int BUTTONNAME = 101;
  /** RegularExpression Id. */
  int ROOTTAG = 102;
  /** RegularExpression Id. */
  int QSTRING = 103;
  /** RegularExpression Id. */
  int ASSIGNSTRING = 104;
  /** RegularExpression Id. */
  int REMARKSTRING = 105;
  /** RegularExpression Id. */
  int CONSTSTRING = 106;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 11>",
    "<CYDBPREFIX>",
    "\"SQL\"",
    "<START_SHOWTEXT>",
    "<END_SHOWTEXT>",
    "<XSDFILE>",
    "<FILENAME>",
    "\"hold\"",
    "\"run\"",
    "\"execute\"",
    "\"current\"",
    "\"display\"",
    "<DISPLAYXML>",
    "<DISPLAYTXT>",
    "<DISPLAYPDF>",
    "\"click\"",
    "\"press\"",
    "\"close\"",
    "\"pause\"",
    "\"logon\"",
    "\"list\"",
    "\"clear\"",
    "\"clusters\"",
    "\"commands\"",
    "\"variables\"",
    "\"variable\"",
    "\"logs\"",
    "<CREATEXML>",
    "<DISPLAYFILE>",
    "<CONVERTSWF>",
    "<PLOTSWF>",
    "\"snapshot\"",
    "<CREATEFILE>",
    "<COPYFILE>",
    "\"generateIndex\"",
    "\"printIndexedElements\"",
    "\"countIndexedElements\"",
    "\"printByExactMatch\"",
    "<DELETEFILE>",
    "<SHOWDIRECTORY>",
    "<STORAGECOUNTERCOMMANDS>",
    "<getPageAllocatedCount>",
    "<getPageDeallocatedCount>",
    "<getPageRequestCount>",
    "<getPageAccessCount>",
    "<getPageAccessRelativeCount>",
    "<resetPageAccessRelativeCount>",
    "<CREATESTORAGE>",
    "<CREATERAWSTORAGE>",
    "<LOADSTORAGE>",
    "<USESTORAGE>",
    "<FORMATSTORAGE>",
    "<REFORMATSTORAGE>",
    "<STARTBUFFERMANAGER>",
    "\"demoForStorageAPIs\"",
    "<WRITEBITMAP>",
    "\"help\"",
    "\"step\"",
    "\"set\"",
    "\"declare\"",
    "\"undeclare\"",
    "<TYPE>",
    "\"load\"",
    "\"log\"",
    "<LOGTYPE>",
    "\"out\"",
    "\"if\"",
    "\"else\"",
    "<OR>",
    "<AND>",
    "<FOREACH>",
    "<IN>",
    "<WHILE>",
    "<BLOCKSTRING>",
    "\":\"",
    "\":>\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<ID>",
    "<PREFIXID>",
    "<NUM>",
    "<CLUSTERNAME>",
    "<BUTTONNAME>",
    "<ROOTTAG>",
    "<QSTRING>",
    "<ASSIGNSTRING>",
    "<REMARKSTRING>",
    "<CONSTSTRING>",
    "\">>\"",
    "\"$$\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"}\"",
    "\",\"",
  };

}
